# Generated by Django 5.0.6 on 2024-06-27 19:33

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='If your account is of a business type i.e. seller, then please drop your business email instead', max_length=254, unique=True)),
                ('phoneNumber', models.CharField(help_text='Email. If your account is of a business type i.e. seller, please drop your business phone number instead', max_length=15, unique=True, verbose_name='Phone number')),
                ('account_type', models.CharField(choices=[('b', 'Buyer'), ('s', 'Seller'), ('bt', 'Both')], default='b', max_length=2)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='BusinessInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='If your account is of a business type i.e. seller, then please drop your business name instead', max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='First name')),
                ('last_name', models.CharField(blank=None, help_text='Not required for business account', max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Last name')),
                ('year_of_birth', models.PositiveIntegerField()),
                ('profile_image', models.ImageField(blank=True, default='user-svgrepo-com.svg', null=True, upload_to='media/profile')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('business_name', models.CharField(error_messages='Business Name already exists', max_length=30, unique=True, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Business Name')),
                ('business_location', models.CharField(max_length=150)),
                ('business_country_id', models.CharField(max_length=20)),
                ('business_started_since', models.DateField(blank=True, help_text='(If applicable)', null=True)),
                ('business_type', models.CharField(choices=[('SP', 'Proprietorship'), ('C', 'Corporation'), ('P', 'Partnership'), ('LLC', 'Limited liability company')], default='SP', max_length=3)),
                ('business_description', models.CharField(blank=True, max_length=300)),
                ('business_custom_care_phone_number', models.CharField(max_length=15, unique=True)),
                ('registration_number', models.CharField(blank=True, help_text='(If applicable)', max_length=50, unique=True)),
                ('tax_identification_number', models.CharField(blank=True, help_text='(If applicable)', max_length=50, unique=True)),
                ('postal_code', models.CharField(default='', max_length=10)),
                ('website', models.URLField(blank=True, help_text='(If applicable)', unique=True)),
                ('business_social_A', models.URLField(blank=True, help_text='(If applicable)')),
                ('business_social_B', models.URLField(blank=True, help_text='(If applicable)')),
                ('business_social_C', models.URLField(blank=True, help_text='(If applicable)')),
                ('business_social_D', models.URLField(blank=True, help_text='(If applicable)')),
                ('business_confirmation', models.BooleanField(default=False)),
                ('created_on', models.DateField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('first_name', 'last_name')},
            },
        ),
        migrations.CreateModel(
            name='BusinessFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_rating', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=1)),
                ('feedback_has_verified_purchase', models.BooleanField(default=False)),
                ('feedback_comment', models.TextField()),
                ('feedback_is_valid', models.BooleanField(default=True)),
                ('feedback_from', models.ManyToManyField(related_name='business_from', to=settings.AUTH_USER_MODEL)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_feedback', to='auths.businessinfo')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='If your account is of a business type i.e. seller, then please drop your business name instead', max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='First name')),
                ('last_name', models.CharField(blank=None, help_text='Not required for business account', max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Last name')),
                ('year_of_birth', models.PositiveIntegerField()),
                ('profile_image', models.ImageField(blank=True, default='user-svgrepo-com.svg', null=True, upload_to='media/profile')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('middle_name', models.CharField(blank=True, max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('country', models.CharField(max_length=30)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('first_name', 'last_name')},
            },
        ),
    ]
